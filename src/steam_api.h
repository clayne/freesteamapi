#ifndef STEAM_API_H_
#define STEAM_API_H_

#include <iostream>
#include <cstdint>

#define STEAM_API extern "C" __attribute__ ((visibility("default")))

#define TRACE(msg) do { std::cerr << __FILE__ << ":" << __LINE__ << " (" << __FUNCTION__ << "): " << msg << std::endl;  } while(0)
#define WARN(msg) TRACE(msg)
#define ERR(msg) TRACE(msg)
#define STUB() TRACE("STUB: not implemented")

#define STRINGIFY(x) #x
#define TOSTRING(x) STRINGIFY(x)

typedef uint8_t uint8;
typedef int8_t int8;
typedef uint16_t uint16;
typedef int16_t int16;
typedef uint32_t uint32;
typedef int32_t int32;
typedef uint64_t uint64;
typedef int64_t int64;

class CGameID {
private:
    uint64 data;
};

class CSteamID {
private:
    uint64 data;
};

class ISteamApps;
class ISteamAppList;
class ISteamAppTicket;
class ISteamClient;
class ISteamController;
class ISteamFriends;
class ISteamHTMLSurface;
class ISteamHTTP;
class ISteamInventory;
class ISteamMatchmaking;
class ISteamMatchmakingServers;
class ISteamMusic;
class ISteamMusicRemote;
class ISteamNetworking;
class ISteamRemoteStorage;
class ISteamScreenshots;
class ISteamUGC;
class ISteamUser;
class ISteamUserStats;
class ISteamUtils;
class ISteamVideo;
class ISteamGameServer;
class ISteamGameServerStats;
class ISteamGameCoordinator;
class ISteamParentalSettings;

/* FIXME */
class ISteamContentServer;
class ISteamMasterServerUpdater;
class ISteamUnifiedMessages;
class ISteamMatchmakingServerListResponse;
class ISteamMatchmakingPingResponse;
class ISteamMatchmakingPlayersResponse;
class ISteamMatchmakingRulesResponse;
typedef uint64 SteamAPI_PostAPIResultInProcess_t;
typedef uint64 SteamAPI_CheckCallbackRegistered_t;
typedef void(*SteamAPIWarningMessageHook_t)(void*);

/* generated by gen_types.py */
#include "steam_types.h"
/* generated by gen_iface.py */
#include "steam_interfaces.h"

#endif /* STEAM_API_H_ */
